rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedInUser() {
      return request.auth.uid != null;
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.designation == "Admin";
    }

    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null;

      match /users/{userId}/payments_history/{document} {
        allow read: if request.auth.uid == userId
        allow write: if request.auth != null; 
      }
    }

    match /complaints/{complaint} {
    	allow write: if request.auth.uid != null;
      allow read: if request.auth.uid != null;
    }

    match /landlords/{landlord} {
      allow read, write: if request.auth != null;
    }

    match /tenants/{tenant} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.apartment_name != null;
    }

    match /vacations/{vacate} {
    	allow read: if request.auth.uid != null;
      allow write: if request.auth.uid != null && request.resource.data.date != null;
    }

    match /apartments/{apartment} {
    	allow read; 
    	allow write: if isSignedInUser();
      match /floors/{floor} {
    	  allow read, write: if isSignedInUser();
        match /tenants/{tenant} {
          allow read, write: if isSignedInUser();
        }
      }
    }

    match /managers/{manager} {
    	allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.resource.data.apartment_name != null;
      allow delete: if request.auth != null;
    }

    match /vacations/{vacate} {
    	allow read, write: if request.auth != null;
    }
    
    match /listings/{listing} {
    	allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /payments/{doc=**} {
    	allow read, write: if request.auth != null;
    }

    match /bookings/{doc} {
    	allow write: if true;
      allow read: if request.auth != null;
    }

    match /services/{serviceDoc} {
      allow read: if request.auth != null;
    }

    match /analytics/{doc} {
      allow read: if isSignedInUser() && isSuperAdmin();
    }

    match /reports/{report} {
      function isValidReport() {
        return request.resource.data.start != null
          && request.resource.data.end != null
          && request.resource.data.code != null
          && request.resource.data.uid != null
          && exists(/databases/$(database)/documents/users/$(request.resource.data.uid))
          && request.resource.data.size() == 4
          && request.resource.data.code is number;
      }
      allow write: if isSignedInUser() && isValidReport();
      allow read: if isSignedInUser();
    }
  }
}